{"version":3,"sources":["resources/img/home-view.jpeg","Sites/Home/Home.jsx","Sites/MC2/functions/cipherFunctions.js","Sites/MC2/components/StatelessComponents.jsx","Sites/MC2/Chiper.jsx","App/AppRouter.jsx","App/Licenses.jsx","App/App.jsx","service/serviceWorker.js","index.jsx"],"names":["require","Component","decode","input","code","x","key","y","output","i","length","charCodeAt","replaceAt","String","fromCharCode","encode","Header","className","PythonLink","href","target","rel","prototype","index","replacement","this","substr","Cipher","state","inputField","outputField","passwordField","handleChange","event","setState","name","value","handleButtonClick","TextFields","onChange","type","onClick","readOnly","componentDidMount","document","title","render","AppRouter","props","routes","map","route","path","exact","component","Licenses","App","components","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.42795afe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/home-view.42622962.jpeg\";","import React, { Component } from 'react';\nimport BottomLinks from '../../App/Links/Links';\nimport 'bulma/css/bulma.css';\nimport './Home.css';\nimport '../../utils/spacing.scss';\n\nconst homePicture = require('../../resources/img/home-view.jpeg');\n\nclass Home extends Component {\n  componentDidMount() {\n    document.title = 'Welcome';\n  }\n\n  render() {\n    return (\n      <div className=\"has-background-black\" id=\"whole-page\">\n        <div className=\"container\">\n          <div className=\"section\">\n            <div>\n              <h1 className=\"m-b-xl title is-1 has-text-centered has-text-white\">\n                Welcome to mpmamaci.com\n              </h1>\n              <BottomLinks />\n            </div>\n            <div className=\"m-lg\">\n              <img className=\"image\" src={homePicture} alt=\"\" border=\"5rem\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","function decode(input, code) {\n  let output = input;\n\n  let x;\n  let key;\n  let y;\n\n  for (let i = 0; i < input.length; i += 1) {\n    if (input.charCodeAt(i) <= 32 || input.charCodeAt(i) >= 226) {\n      continue;\n    }\n    x = input.charCodeAt(i) - 33;\n    key = code.charCodeAt(i % code.length) - 33;\n    y = x - key;\n    if (y < 0) y += 193;\n    y %= 193;\n    output = output.replaceAt(i, String.fromCharCode(y + 33));\n  }\n\n  return output;\n}\n\nfunction encode(input, code) {\n  let output = input;\n\n  let x;\n  let key;\n\n  for (let i = 0; i < input.length; i += 1) {\n    if (input.charCodeAt(i) <= 32 || input.charCodeAt(i) >= 226) {\n      continue;\n    }\n    x = input.charCodeAt(i) - 33;\n    key = code.charCodeAt(i % code.length) - 33;\n    x = (x + key) % 193;\n    output = output.replaceAt(i, String.fromCharCode(x + 33));\n  }\n\n  return output;\n}\n\nString.prototype.replaceAt = function(index, replacement) {\n  return this.substr(0, index) + replacement + this.substr(index + replacement.length);\n};\n\nexport { encode, decode };\n","import React from 'react';\nimport 'bulma/css/bulma.css';\n\nfunction Header() {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title is-3 is-spaced has-text-white\">MC-2.0 Cipher</h1>\n      <p className=\"subtitle is-4 has-text-white-ter\">\n        a low-level string encryption based on vigenere\n      </p>\n    </div>\n  );\n}\n\nfunction PythonLink() {\n  return (\n    <div className=\"section\">\n      <a\n        className=\"has-text-info has-text-left subtitle is-3\"\n        href=\"https://drive.google.com/drive/folders/1gRc_HsOY-4yj1LDYr6MbfpzBiter7czy?usp=sharing\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <u>Desktop Version for File Encryption</u>\n      </a>\n    </div>\n  );\n}\n\nexport { PythonLink, Header };\n","import React, { Component } from 'react';\nimport { encode, decode } from './functions/cipherFunctions';\nimport { PythonLink, Header } from './components/StatelessComponents';\nimport BottomLinks from '../../App/Links/Links';\nimport 'bulma/css/bulma.css';\nimport './MC2.css';\n\nclass Cipher extends Component {\n  state = {\n    inputField: '',\n    outputField: '',\n    passwordField: ''\n  };\n\n  componentDidMount() {\n    document.title = 'MC-2 Cipher';\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleButtonClick = event => {\n    if (event.target.name === 'encryption') {\n      this.setState({ outputField: encode(this.state.inputField, this.state.passwordField) });\n    } else if (event.target.name === 'decryption') {\n      this.setState({ outputField: decode(this.state.inputField, this.state.passwordField) });\n    }\n  };\n\n  TextFields = () => (\n    <div className=\"columns\">\n      <div className=\"column is-half\">\n        <p className=\"has-text-white-ter has-text-left subtitle is-5\">Enter your text here:</p>\n        <textarea\n          name=\"inputField\"\n          value={this.state.inputField}\n          onChange={this.handleChange}\n          className=\"form-control textarea upperTextbox\"\n        />\n        <p className=\"has-text-white-ter has-text-left subtitle is-5\">Password:</p>\n        <input\n          name=\"passwordField\"\n          value={this.state.passwordField}\n          onChange={this.handleChange}\n          className=\"input is-primary\"\n          type=\"text\"\n        />\n        <div className=\"columns innerColumnsStyle is-mobile\">\n          <button\n            name=\"encryption\"\n            onClick={this.handleButtonClick}\n            className=\"column button is-white is-fullwidth stylesButton\"\n            type=\"button\"\n          >\n            encryption\n          </button>\n          <button\n            name=\"decryption\"\n            onClick={this.handleButtonClick}\n            className=\"column button is-white is-fullwidth stylesButton\"\n            type=\"button\"\n          >\n            decryption\n          </button>\n        </div>\n      </div>\n      <div className=\"column is-half\">\n        <p className=\"has-text-white-ter has-text-left subtitle is-5\">Result:</p>\n        <textarea value={this.state.outputField} className=\"textarea\" type=\"text\" readOnly />\n      </div>\n    </div>\n  );\n\n  render() {\n    return (\n      <div className=\"cipher-header section has-background-black has-text-centered\">\n        <Header />\n        <div className=\"container section is-medium\">\n          <div>{this.TextFields()}</div>\n          <PythonLink />\n          {/*<BottomLinks />*/}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Cipher;\n","import React, { Component } from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\n\nclass AppRouter extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <div>\n          {this.props.routes.map(route => (\n            <Route key={route.path} path={route.path} exact component={route.component} />\n          ))}\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default AppRouter;\n","import React, { Component } from 'react';\nimport 'bulma/css/bulma.css';\n\nclass Licenses extends Component {\n  render() {\n    return (\n      <div className=\"section container\">\n        <span className=\"title is-1\">Used Material:</span>\n        <div className=\"section\">\n          <p className=\"is-3\">Pomodoro SVG:</p>\n          <p>designed by Freepik from Flaticon</p>\n          <p>-----</p>\n          <p className=\"is-3\">Sound effect after the end of the timer:</p>\n          <p> by Daniel Simion under CC license</p>\n          <p>\n            <a className=\"is-link\" href=\"https://creativecommons.org/licenses/by/3.0/legalcode\">\n              License\n            </a>\n          </p>\n          <p>\n            <a className=\"is-link\" href=\"http://soundbible.com/2197-Analog-Watch-Alarm.html\">\n              Source\n            </a>\n          </p>\n          <p>-----</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Licenses;\n","import React, { Component } from 'react';\nimport Home from '../Sites/Home/Home';\nimport Cipher from '../Sites/MC2/Chiper';\nimport Clock from '../Sites/Clock/Clock';\nimport AppRouter from './AppRouter';\nimport '../Sites/Pomodoro/Pomodoro.css';\nimport 'bulma/css/bulma.css';\nimport Licenses from './Licenses';\n\nclass App extends Component {\n  state = {\n    components: [\n      {\n        path: '/',\n        component: Cipher//Home\n      },\n      // {\n      //   path: '/pomodoro',\n      //   component: Pomodoro\n      // },\n      {\n        path: '/mc2',\n        component: Cipher\n      },\n      {\n        path: '/licenses',\n        component: Licenses\n      },\n      // {\n      //   path: '/clock',\n      //   component: Clock\n      // }\n    ]\n  };\n\n  render() {\n    return <AppRouter routes={this.state.components} />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './service/serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}