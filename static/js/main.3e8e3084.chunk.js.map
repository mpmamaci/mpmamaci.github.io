{"version":3,"sources":["resources/tomato.svg","Sites/MC2/cipherFunctions.js","Sites/MC2/components/StateLessComponents.jsx","Sites/MC2/Chiper.jsx","App/App.jsx","service/serviceWorker.js","index.jsx"],"names":["module","exports","__webpack_require__","p","decode","input","code","y","output","i","length","charCodeAt","replaceAt","String","fromCharCode","encode","x","Header","react_default","a","createElement","className","PythonLink","href","target","rel","prototype","index","replacement","this","substr","Cipher","state","inputField","outputField","passwordField","handleInputChange","event","_this","setState","value","handlePasswordChange","handleEncryButton","handleDecryButton","onChange","type","onClick","readOnly","Column","Component","App","titel","src","promodoro","alt","cipher","Chiper","AppRouter","BrowserRouter","Route","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3e8e3084.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tomato.78df75cb.svg\";","String.prototype.replaceAt = function(index, replacement) {\n  return this.substr(0, index) + replacement + this.substr(index + replacement.length);\n};\n\nfunction decode(input, code) {\n  let output = input;\n\n  let x;\n  let key;\n  let y;\n\n  for (let i = 0; i < input.length; i += 1) {\n    if (input.charCodeAt(i) <= 32 || input.charCodeAt(i) >= 226) {\n      i += 1;\n    }\n    x = input.charCodeAt(i) - 33;\n    key = code.charCodeAt(i % code.length) - 33;\n    y = x - key;\n    if (y < 0) y += 193;\n    y %= 193;\n    output = output.replaceAt(i, String.fromCharCode(y + 33));\n  }\n\n  return output;\n}\n\nfunction encode(input, code) {\n  let output = input;\n\n  let x;\n  let key;\n  let y;\n\n  for (let i = 0; i < input.length; i += 1) {\n    if (input.charCodeAt(i) <= 32 || input.charCodeAt(i) >= 226) {\n      i += 1;\n    }\n    x = input.charCodeAt(i) - 33;\n    key = code.charCodeAt(i % code.length) - 33;\n    x = (x + key) % 193;\n    output = output.replaceAt(i, String.fromCharCode(x + 33));\n  }\n\n  return output;\n}\n\nexport { encode, decode };\n","import React from 'react';\nimport 'bulma/css/bulma.css';\n\nfunction Header() {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title is-3 is-spaced has-text-white\">MC-2.0 Cipher</h1>\n      <p className=\"subtitle is-4 has-text-white-ter\">\n        a low-level string encryption based on vigenere\n      </p>\n    </div>\n  );\n}\n\nfunction PythonLink() {\n  return (\n    <div className=\"section\">\n      <a\n        className=\"has-text-info has-text-left subtitle is-3\"\n        href=\"https://drive.google.com/file/d/12FUF_74zSd7J3KBtSvkC8TGALyL-KMHV/view?usp=sharing\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <u>Python Version for File Encryption</u>\n      </a>\n    </div>\n  );\n}\n\nexport { PythonLink, Header };\n","import React, { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './MC2.css';\nimport { encode, decode } from './cipherFunctions';\nimport { PythonLink, Header } from './components/StateLessComponents';\n\nclass Cipher extends Component {\n  state = {\n    inputField: '',\n    outputField: '',\n    passwordField: ''\n  };\n\n  handleInputChange = event => {\n    this.setState({ inputField: event.target.value });\n  };\n\n  handlePasswordChange = event => {\n    this.setState({ passwordField: event.target.value });\n  };\n\n  handleEncryButton = () => {\n    this.setState({\n      outputField: encode(this.state.inputField, this.state.passwordField)\n    });\n  };\n\n  handleDecryButton = () => {\n    this.setState({\n      outputField: decode(this.state.inputField, this.state.passwordField)\n    });\n  };\n\n  Column() {\n    return (\n      <div className=\"columns\">\n        <div className=\"column is-half\">\n          <p className=\"has-text-white-ter has-text-left subtitle is-5\">Enter your text here:</p>\n          <textarea\n            value={this.state.inputField}\n            onChange={this.handleInputChange}\n            className=\"form-control textarea upperTextbox\"\n          />\n          <p className=\"has-text-white-ter has-text-left subtitle is-5\">Password:</p>\n          <input\n            value={this.state.passwordField}\n            onChange={this.handlePasswordChange}\n            className=\"input is-primary\"\n            type=\"text\"\n          />\n          <div className=\"columns innerColumnsStyle is-mobile\">\n            <button\n              onClick={this.handleEncryButton}\n              className=\"column button is-white is-fullwidth stylesButton\"\n              type=\"button\"\n            >\n              encryption\n            </button>\n            <button\n              onClick={this.handleDecryButton}\n              className=\"column button is-white is-fullwidth stylesButton\"\n              type=\"button\"\n            >\n              decryption\n            </button>\n          </div>\n        </div>\n        <div className=\"column is-half\">\n          <p className=\"has-text-white-ter has-text-left subtitle is-5\">Result:</p>\n          <textarea value={this.state.outputField} className=\"textarea\" type=\"text\" readOnly />\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"cipher-header section has-background-black has-text-centered\">\n        <Header />\n        <div className=\"container section is-medium\">\n          <div>{this.Column()}</div>\n          <PythonLink />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Cipher;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport promodoro from '../resources/tomato.svg';\nimport Cipher from '../Sites/MC2/Chiper';\nimport './App.css';\nimport 'bulma/css/bulma.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img\n            titel=\"designed by Freepik from Flaticon\"\n            src={promodoro}\n            className=\"App-logo\"\n            alt=\"logo\"\n          />\n          <p className=\"section subtitle is-small\">designed by Freepik from Flaticon</p>\n          <div className=\"columns\">\n            <a\n              className=\"App-link column\"\n              href=\"http://tomato-timer.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Pomodoro Timer\n            </a>\n            <a className=\"App-link column is-half\" href=\"/mc2\">\n              Advanced Vigenere\n            </a>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nfunction cipher() {\n  return <Cipher />;\n}\n\nfunction AppRouter() {\n  return (\n    <Router>\n      <div>\n        <Route path=\"/\" exact component={App} />\n        <Route path=\"/mc2/\" component={cipher} />\n      </div>\n    </Router>\n  );\n}\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppRouter from './App/App';\nimport * as serviceWorker from './service/serviceWorker';\n\n// eslint-disable-next-line no-undef\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}